definitions:
  api.HTTPError:
    properties:
      error:
        $ref: '#/definitions/api.HTTPErrorPayload'
    type: object
  api.HTTPErrorPayload:
    properties:
      message:
        type: string
      reason:
        type: string
    type: object
  dto.Profile:
    properties:
      avatarHash:
        type: string
      bio:
        type: string
      imageHash:
        type: string
      location:
        type: string
      onBoarded:
        type: boolean
      profileLink:
        type: string
    type: object
  dto.User:
    properties:
      createdAt:
        type: string
      description:
        type: string
      email:
        type: string
      id:
        type: string
      isNodeAdmin:
        type: boolean
      name:
        type: string
      profile:
        $ref: '#/definitions/dto.Profile'
      status:
        type: string
      updatedAt:
        type: string
      userTypeId:
        type: string
      wallet:
        type: string
    type: object
  node.apiProfileUpdate.Body:
    properties:
      name:
        type: string
      profile:
        properties:
          avatarHash:
            type: string
          bio:
            type: string
          location:
            type: string
          name:
            type: string
          profileLink:
            type: string
        type: object
    type: object
info:
  contact: {}
paths:
  /api/v4/profile:
    patch:
      consumes:
      - application/json
      description: Edits a profile
      parameters:
      - description: body params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/node.apiProfileUpdate.Body'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      summary: Edits a profile
      tags:
      - profile
  /api/v4/users/me:
    get:
      consumes:
      - application/json
      description: Returns user-information based on token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      summary: Returns user-information based on token.
      tags:
      - users
swagger: "2.0"
